# Slip 15 A
#Create an ANN and train it on house price dataset classify the house price is above average or below average

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Dataset
df = pd.DataFrame({
    'size':[1000,1500,2000,2500,3000,3500,4000,4500],
    'rooms':[2,3,3,4,4,5,5,6],
    'price':[200000,250000,300000,400000,500000,600000,650000,800000]
})
df['label'] = (df['price'] > df['price'].mean()).astype(int)

X, y = df[['size','rooms']], df['label']
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=42)

scaler = StandardScaler()
X_train, X_test = scaler.fit_transform(X_train), scaler.transform(X_test)

# ANN model
model = Sequential([
    Dense(8, input_dim=2, activation='relu'),
    Dense(4, activation='relu'),
    Dense(1, activation='sigmoid')
])
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
model.fit(X_train, y_train, epochs=30, verbose=0)

# Evaluate & Predict
print("Accuracy:", model.evaluate(X_test,y_test,verbose=0)[1])
print("Predictions:", (model.predict(X_test)>0.5).astype(int).flatten())
---------------------------------------------------------------------------------
## Slip 3A,15B,17B
 ##Write a python program to implement multiple Linear Regression for a house price 
##dataset. Divide the dataset into training and testing data

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Sample data (or use: df = pd.read_csv("house_prices.csv"))
df = pd.DataFrame({
    'size':[1500,2000,2500,1800,3000,3500,4000],
    'bedrooms':[3,4,4,3,5,5,6],
    'age':[10,15,20,15,5,8,6],
    'price':[300000,400000,500000,380000,600000,700000,800000]
})

X, y = df[['size','bedrooms','age']], df['price']
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=0)

model = LinearRegression().fit(X_train,y_train)
y_pred = model.predict(X_test)

print("MSE:", mean_squared_error(y_test,y_pred))
print("RÂ²:", r2_score(y_test,y_pred))
print("Predicted Prices:", y_pred)
----------------------------------------------------------------------------------