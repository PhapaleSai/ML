# Step 1: Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Step 2: Create a small dataset (like house details)
data = {
    'Square_Feet': [1500, 2500, 1800, 2200, 1700, 2400, 2100, 2600, 1900, 2300],
    'Bedrooms':    [3,    4,    3,    4,    2,    4,    3,    5,    3,    4],
    'Age':         [10,   15,   5,    20,   10,   15,   10,   5,    15,   20],
    'Price':       [300000, 500000, 400000, 450000, 320000, 
                    480000, 430000, 550000, 410000, 470000]
}

df = pd.DataFrame(data)

# Step 3: Features (inputs) and Target (output we want to predict)
X = df[['Square_Feet', 'Bedrooms', 'Age']]   # What we know about the house
y = df['Price']                              # What we want to predict

# Step 4: Split data into training (learn) and testing (check accuracy)
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# Step 5: Create the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)   # Train (learn patterns)

# Step 6: Test the model
y_pred = model.predict(X_test)   # Predict house prices for test data

# Step 7: Evaluate performance
mse = mean_squared_error(y_test, y_pred)   # How far predictions are from actual
r2 = r2_score(y_test, y_pred)              # Accuracy measure (closer to 1 = better)

print("Mean Squared Error:", mse)
print("R2 Score:", r2)

# Step 8: Show Predictions
print("Predicted Prices:", y_pred)
print("Actual Prices:", y_test.values)
