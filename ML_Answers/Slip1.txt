# Use Apriori algorithm on groceries dataset to find which items are brought together. Use minimum support =0.25 
#SlIP 1A,22B,26B
 # Import necessary libraries
 import pandas as pd
 from mlxtend.frequent_patterns import apriori, association_rules
 # Sample dataset (assuming a structure of one-hot encoded data)
 data = {
 'milk': [1, 1, 1, 0, 0, 1],
 'bread': [1, 0, 1, 1, 1, 0],
 'butter': [0, 1, 1, 1, 0, 1],
 'beer': [1, 0, 0, 1, 1, 0]
 }
 df = pd.DataFrame(data)
 # Apply Apriori algorithm with minimum support of 0.25
 frequent_itemsets = apriori(df, min_support=0.25, use_colnames=True)
 # Display results
 print("Frequent Itemsets:")
 print(frequent_itemsets)
 # Generate association rules
 rules = association_rules(frequent_itemsets, metric="lift", min_threshold=1)
 print("\nAssociation Rules:")
 print(rules[['antecedents', 'consequents', 'support', 'confidence', 'lift']])
----------------------------------------------------------------------------------------------------------------------------
#SLIP 1B,10B
# Write a Python program to prepare Scatter Plot for Iris Dataset. Convert Categorical 
# values in numeric format for a dataset.

 # Import necessary libraries
 import pandas as pd
 import seaborn as sns
 import matplotlib.pyplot as plt
 from sklearn.datasets import load_iris
 # Load Iris dataset
 iris = load_iris()
 df = pd.DataFrame(iris.data, columns=iris.feature_names)
 df['species'] = iris.target  # Adding target as species column
 # Convert categorical values to numeric (if not already)
 # In this case, iris.target is already numeric, so no conversion is necessary.
 # Otherwise, you could use df['species'] = df['species'].astype('category').cat.codes
 # Plot a scatter plot for two features: sepal length and petal length
 plt.figure(figsize=(8, 6))
 sns.scatterplot(x=df['sepal length (cm)'], y=df['petal length (cm)'], hue=df['species'], palette="viridis")
 plt.title("Scatter Plot of Sepal Length vs. Petal Length")
 plt.xlabel("Sepal Length (cm)")
 plt.ylabel("Petal Length (cm)")
 plt.legend(title="Species")
 plt.show()
---------------------------------------------------------------------------------------------------------------------------------
