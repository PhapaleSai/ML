##SLIP 8A,28A
## Write a python program to categorize the given news text into one of the available 20 
##categories of news groups, using multinomial Na√Øve Bayes machine learning model

from sklearn.datasets import fetch_20newsgroups
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report

# Load dataset
newsgroups = fetch_20newsgroups(subset='all')
X = TfidfVectorizer(stop_words='english').fit_transform(newsgroups.data)
y = newsgroups.target

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Train Multinomial Naive Bayes
model = MultinomialNB()
model.fit(X_train, y_train)

# Predict and evaluate
y_pred = model.predict(X_test)
print(f"Accuracy: {accuracy_score(y_test, y_pred) * 100:.2f}%")
print(classification_report(y_test, y_pred, target_names=newsgroups.target_names))

----------------------------------------------------------------------------------------------

# Slip 28B
#  Classify the iris flowers dataset using SVM and find out the flower type depending on 
# the given input data like sepal length, sepal width, petal length and petal width. Find 
# accuracy of all SVM kernels. 

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

# Load dataset
iris = load_iris()
X, y = iris.data, iris.target
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# SVM kernels to test
kernels = ['linear', 'poly', 'rbf', 'sigmoid']
for k in kernels:
    model = SVC(kernel=k).fit(X_train, y_train)
    y_pred = model.predict(X_test)
    acc = accuracy_score(y_test, y_pred)
    print(f"Kernel: {k}, Accuracy: {acc*100:.2f}%")

# Predict flower type for new input
new_data = [[5.1, 3.5, 1.4, 0.2]]  # Example: sepal length, sepal width, petal length, petal width
predicted_class = iris.target_names[model.predict(new_data)[0]]
print("Predicted Flower Type:", predicted_class)
----------------------------------------------------------------------------------------------
