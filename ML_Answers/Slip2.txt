 ## Slip 2A,4B,13B,22A
 ##Write a python program to implement simple Linear Regression for predicting house   
##price. First find all null values in a given dataset and remove them.
 # Import necessary libraries
 import pandas as pd
 from sklearn.model_selection import train_test_split
 from sklearn.linear_model import LinearRegression
 from sklearn.metrics import mean_squared_error
 
# Sample data (or load your data as df = pd.read_csv("your_dataset.csv"))
 data = {
    'size': [1500, 2000, 2500, None, 3000, 3500, 4000, None],
    'price': [300000, 400000, 500000, 450000, 600000, 700000, 800000, None]
 }
 df = pd.DataFrame(data)
 
# 1. Check and remove null values
 df = df.dropna()
 
# 2. Separate features and target variable
 X = df[['size']]   # Feature (independent variable)
 y = df['price']    # Target (dependent variable)
 
# 3. Split data into training and testing sets
 X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)
 
# 4. Initialize and train the Linear Regression model
 model = LinearRegression()
 model.fit(X_train, y_train)
 
# 5. Predict and evaluate the model
 y_pred = model.predict(X_test)
 mse = mean_squared_error(y_test, y_pred)
 print("Mean Squared Error:", mse)
 
# 6. Display model prediction for test data
 print("Predicted House Prices:", y_pred)
--------------------------------------------------------------------------------------------------------------------------------------------------
##2B
##The data set refers to clients of a wholesale distributor. It includes the annual  
##spending in monetary units on diverse product categories. Using data Wholesale  
##customer dataset compute agglomerative clustering to find out annual spending  
##clients in the same region.

import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import AgglomerativeClustering
import seaborn as sns
import matplotlib.pyplot as plt

# csv link :- https://www.kaggle.com/code/prashant111/a-guide-on-xgboost-hyperparameters-tuning

df = pd.read_csv("Wholesale_customers_data.csv")
# Filter region, scale, and cluster
X = df[df['Region']==1].drop(columns=['Region'])
X_scaled = StandardScaler().fit_transform(X)
X['Cluster'] = AgglomerativeClustering(n_clusters=2, linkage='ward').fit_predict(X_scaled)

# Plot
sns.scatterplot(data=X, x='Fresh', y='Grocery', hue='Cluster', palette="viridis")
plt.title("Agglomerative Clustering (Region 1)")
plt.show()
------------------------------------------------------------------------------------------------------------------------------------------------