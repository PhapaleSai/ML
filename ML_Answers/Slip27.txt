##SLIP 21A,27A
##Create a multiple linear regression model for house price dataset divide dataset into 
##train and test data while giving it to model and predict prices of house. 

import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Dataset
df = pd.DataFrame({
    'Size':[1500,1800,2400,3000,3500,4000],
    'Bedrooms':[3,4,4,5,5,6],
    'Age':[10,15,20,25,30,35],
    'Price':[400000,500000,600000,650000,700000,750000]
})

X, y = df[['Size','Bedrooms','Age']], df['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = LinearRegression().fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)
print(f'MSE: {mean_squared_error(y_test, y_pred):.2f}')
print("Predicted price for [2500,4,20]:", model.predict([[2500,4,20]])[0])
----------------------------------------------------------------------------------------------

# Slip 7A , 12B , 19A , 23A,27 B
# Fit the simple linear regression model to Salary_positions.csv data. Predict the sa 
#of level 11 and level 12 employees. 

import pandas as pd
from sklearn.linear_model import LinearRegression

# 1. Create a dummy dataset
data = {
    'Level': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    'Salary': [45000, 50000, 60000, 80000, 110000, 150000, 200000, 300000, 500000, 1000000]
}
df = pd.DataFrame(data)
print("Dummy Dataset:\n", df)

# 2. Features and target
X = df[['Level']]
y = df['Salary']

# 3. Train Simple Linear Regression
model = LinearRegression()
model.fit(X, y)

# 4. Predict salaries for level 11 and 12
predicted_salaries = model.predict([[11], [12]])
print("\nPredicted Salaries for Level 11 and 12:", predicted_salaries)

----------------------------------------------------------------------------------------------

