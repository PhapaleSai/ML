#SLIP 5A SAME AS 3,15,17
## Write a python program to implement Multiple Linear Regression for Fuel Consumption dataset
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Sample dataset
df = pd.DataFrame({
    'Engine Size':[2.0,2.4,3.5,3.0,1.5,2.0,3.2],
    'Cylinders':[4,4,6,6,4,4,6],
    'Fuel Consumption':[8.5,9.0,12.0,11.5,7.5,8.5,10.5],
    'CO2 Emissions':[196,221,255,244,180,200,230]
})

# Features and target
X, y = df[['Engine Size','Cylinders','Fuel Consumption']], df['CO2 Emissions']

# Train-test split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=0)

# Train model
model = LinearRegression().fit(X_train,y_train)

# Predict and evaluate
y_pred = model.predict(X_test)
print("MSE:", mean_squared_error(y_test,y_pred))
print("RÂ²:", r2_score(y_test,y_pred))
print("Predicted CO2 Emissions:", y_pred)
-------------------------------------------------------------------------------------------------------------------
 ##SLIP 5B,12A
 ##Write a python program to implement k-nearest Neighbors ML algorithm to build 
##prediction model (Use iris Dataset) 

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

# Load dataset
iris = load_iris()
X, y = iris.data, iris.target

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Train KNN model
knn = KNeighborsClassifier(n_neighbors=3)
knn.fit(X_train, y_train)

# Predict and evaluate
y_pred = knn.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Predicted Species:", y_pred)

-----------------------------------------------------------------------------------------------------------------
