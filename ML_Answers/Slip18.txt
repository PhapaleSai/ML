# Slip 18 A
#Write a python program to implement k-means algorithm on a Diabetes dataset.
import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns

# Sample dataset
df = pd.DataFrame({
    'Pregnancies': [6,1,8,1,0,5,3,10],
    'Glucose': [148,85,183,89,137,116,78,115],
    'BloodPressure': [72,66,64,66,40,74,50,0],
    'SkinThickness': [35,29,0,23,35,0,32,0],
    'Insulin': [0,0,0,94,168,0,88,0],
    'BMI': [33.6,26.6,23.3,28.1,43.1,25.6,31.0,35.3],
    'Age': [50,31,32,21,33,30,26,29]
})

# Features and scaling
X_scaled = StandardScaler().fit_transform(df[['Glucose','BloodPressure','BMI','Age']])

# K-Means clustering
df['Cluster'] = KMeans(n_clusters=3, random_state=0).fit_predict(X_scaled)

# Plot
sns.scatterplot(x='Glucose', y='BMI', hue='Cluster', data=df, palette='viridis', s=100)
plt.title("K-Means Clustering on Diabetes Data")
plt.xlabel("Glucose")
plt.ylabel("BMI")
plt.show()

---------------------------------------------------------------------------------------------------
##SLIP 6A,11A,18B
 ##Write a python program to implement Polynomial Linear Regression for  
##Boston Housing Dataset.(CALIFORNIA DATASET)

from sklearn.datasets import fetch_california_housing
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load dataset
housing = fetch_california_housing()
X, y = housing.data, housing.target

# Polynomial transformation (degree 2)
X_poly = PolynomialFeatures(degree=2).fit_transform(X)

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X_poly, y, test_size=0.2, random_state=0)

# Train Polynomial Regression model
model = LinearRegression().fit(X_train, y_train)

# Predict and evaluate
y_pred = model.predict(X_test)
print("MSE:", mean_squared_error(y_test, y_pred))
print("RÂ²:", r2_score(y_test, y_pred))
print("First 5 Predicted Prices:", y_pred[:5])
---------------------------------------------------------------------------------------------------
